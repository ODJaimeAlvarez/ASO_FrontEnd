/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { RouterLinkActive, Router } from '@angular/router';
import { Directive, ContentChildren, QueryList, ElementRef, Renderer2, ChangeDetectorRef, Input } from '@angular/core';
import { RouterLinkWithHrefDelay } from './router-link-delay';
/**
 * Extends {\@link RouterLinkActive }
 * @see https://github.com/angular/angular/blob/master/packages/router/src/directives/router_link_active.ts
 */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/router';
export class RouterLinkActiveDelay extends RouterLinkActive {
    /**
     * @param {?} router
     * @param {?} element
     * @param {?} renderer
     * @param {?} cdr
     */
    constructor(router, element, renderer, cdr) {
        super(router, element, renderer, cdr);
    }
    /**
     * @param {?} data
     * @return {?}
     */
    set bcRouterLinkActive(data) {
        this.routerLinkActive = data;
    }
}
RouterLinkActiveDelay.ɵfac = function RouterLinkActiveDelay_Factory(t) { return new (t || RouterLinkActiveDelay)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Router), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };
RouterLinkActiveDelay.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: RouterLinkActiveDelay, selectors: [["a", "bcRouterLinkActive", ""]], contentQueries: function RouterLinkActiveDelay_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, RouterLinkWithHrefDelay, 1);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.linksWithHrefs = _t);
    } }, inputs: { bcRouterLinkActive: "bcRouterLinkActive" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });
/** @nocollapse */
RouterLinkActiveDelay.ctorParameters = () => [
    { type: Router, },
    { type: ElementRef, },
    { type: Renderer2, },
    { type: ChangeDetectorRef, },
];
RouterLinkActiveDelay.propDecorators = {
    "linksWithHrefs": [{ type: ContentChildren, args: [RouterLinkWithHrefDelay, { descendants: true },] },],
    "bcRouterLinkActive": [{ type: Input },],
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(RouterLinkActiveDelay, [{
        type: Directive,
        args: [{
                selector: 'a[bcRouterLinkActive]'
            }]
    }], function () { return [{ type: ɵngcc1.Router }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ChangeDetectorRef }]; }, { bcRouterLinkActive: [{
            type: Input
        }], linksWithHrefs: [{
            type: ContentChildren,
            args: [RouterLinkWithHrefDelay, { descendants: true }]
        }] }); })();
function RouterLinkActiveDelay_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    RouterLinkActiveDelay.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    RouterLinkActiveDelay.ctorParameters;
    /** @type {!Object<string,!Array<{type: !Function, args: (undefined|!Array<?>)}>>} */
    RouterLinkActiveDelay.propDecorators;
    /** @type {?} */
    RouterLinkActiveDelay.prototype.linksWithHrefs;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGVyLWxpbmstYWN0aXZlLWRlbGF5LmpzIiwic291cmNlcyI6WyJAYmNvZGVzL25neC1yb3V0ZXJsaW5rLWRlbGF5L2RpcmVjdGl2ZXMvcm91dGVyLWxpbmstYWN0aXZlLWRlbGF5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDM0QsT0FBTyxFQUFFLFNBQVMsRUFBRSxlQUFlLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxTQUFTLEVBQUUsaUJBQWlCLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3ZILE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQzlEO0FBQ0c7QUFDa0M7QUFDdUU7OztBQUs1RyxNQUFNLDRCQUE2QixTQUFRLGdCQUFnQjtBQUMzRDtBQUNPO0FBQTBCO0FBQTJCO0FBQ3BDO0FBQXVCO0FBQVMsSUFHcEQsWUFBWSxNQUFjLEVBQUUsT0FBbUIsRUFBRSxRQUFtQixFQUFFLEdBQXNCO0FBQ2hHLFFBQVEsS0FBSyxDQUFDLE1BQU0sRUFBRSxPQUFPLEVBQUUsUUFBUSxFQUFFLEdBQUcsQ0FBQyxDQUFDO0FBQzlDLEtBQUs7QUFDTDtBQUNPO0FBQ1U7QUFBb0I7QUFBUyxRQUF0QyxrQkFBa0IsQ0FBQyxJQUF1QjtBQUNsRCxRQUFRLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxJQUFJLENBQUM7QUFDckM7QUFDQTttREFqQkMsU0FBUyxTQUFDLG1CQUNQLFFBQVEsRUFBRSx1QkFBdUIsZUFDcEM7Ozs7OztnSEFDSztBQUFFO0FBQW9CO0FBRWpCLFlBYmdCLE1BQU07QUFBTSxZQUNTLFVBQVU7QUFBTSxZQUFKLFNBQVM7QUFBTSxZQUFKLGlCQUFpQjtBQUFNO0FBQUk7QUFDL0UsK0JBWWQsZUFBZSxTQUFDLHVCQUF1QixFQUFFLEVBQUUsV0FBVyxFQUFFLElBQUksRUFBRTtBQUM3RCxtQ0FNRCxLQUFLO0FBQ1A7Ozs7Ozs7Ozs7O29CQUFFO0FBQUU7QUFDVTtBQUcwQjtBQUF1QztBQUFTO0FBQW9CO0FBQXFJO0FBQVM7QUFBMkM7QUFBMkY7QUFBMkM7QUFBc0I7OztBQTFCQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBU0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQU1BLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBR0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQWZBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFWQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBYUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFPQSxBQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUm91dGVyTGlua0FjdGl2ZSwgUm91dGVyIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcclxuaW1wb3J0IHsgRGlyZWN0aXZlLCBDb250ZW50Q2hpbGRyZW4sIFF1ZXJ5TGlzdCwgRWxlbWVudFJlZiwgUmVuZGVyZXIyLCBDaGFuZ2VEZXRlY3RvclJlZiwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgUm91dGVyTGlua1dpdGhIcmVmRGVsYXkgfSBmcm9tICcuL3JvdXRlci1saW5rLWRlbGF5JztcclxuXHJcbi8qKlxyXG4gKiBFeHRlbmRzIHtAbGluayBSb3V0ZXJMaW5rQWN0aXZlIH1cclxuICogQHNlZSBodHRwczovL2dpdGh1Yi5jb20vYW5ndWxhci9hbmd1bGFyL2Jsb2IvbWFzdGVyL3BhY2thZ2VzL3JvdXRlci9zcmMvZGlyZWN0aXZlcy9yb3V0ZXJfbGlua19hY3RpdmUudHNcclxuICovXHJcbkBEaXJlY3RpdmUoe1xyXG4gICAgc2VsZWN0b3I6ICdhW2JjUm91dGVyTGlua0FjdGl2ZV0nXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBSb3V0ZXJMaW5rQWN0aXZlRGVsYXkgZXh0ZW5kcyBSb3V0ZXJMaW5rQWN0aXZlIHtcclxuXHJcbiAgICAvLyBPdmVycmlkZSB0aGUgbGlua3NXaXRoSHJlZnMgd2l0aCBvdXIgc2VsZWN0b3IgY29tcG9uZW50XHJcbiAgICBAQ29udGVudENoaWxkcmVuKFJvdXRlckxpbmtXaXRoSHJlZkRlbGF5LCB7IGRlc2NlbmRhbnRzOiB0cnVlIH0pXHJcbiAgICBsaW5rc1dpdGhIcmVmczogUXVlcnlMaXN0PFJvdXRlckxpbmtXaXRoSHJlZkRlbGF5PjtcclxuXHJcbiAgICBjb25zdHJ1Y3Rvcihyb3V0ZXI6IFJvdXRlciwgZWxlbWVudDogRWxlbWVudFJlZiwgcmVuZGVyZXI6IFJlbmRlcmVyMiwgY2RyOiBDaGFuZ2VEZXRlY3RvclJlZikge1xyXG4gICAgICAgIHN1cGVyKHJvdXRlciwgZWxlbWVudCwgcmVuZGVyZXIsIGNkcik7XHJcbiAgICB9XHJcblxyXG4gICAgQElucHV0KClcclxuICAgIHNldCBiY1JvdXRlckxpbmtBY3RpdmUoZGF0YTogc3RyaW5nW10gfCBzdHJpbmcpIHtcclxuICAgICAgICB0aGlzLnJvdXRlckxpbmtBY3RpdmUgPSBkYXRhO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==