/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Directive, Input, HostListener } from '@angular/core';
import { RouterLinkWithHref, Router, ActivatedRoute } from '@angular/router';
import { LocationStrategy } from '@angular/common';
import { timer } from 'rxjs';
/**
 * Extends {\@link RouterLinkWithHref}
 * @see https://github.com/angular/angular/blob/master/packages/router/src/directives/router_link.ts
 */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/router';
import * as ɵngcc2 from '@angular/common';
var RouterLinkWithHrefDelay = /** @class */ (function (_super) {
    tslib_1.__extends(RouterLinkWithHrefDelay, _super);
    function RouterLinkWithHrefDelay(router, route, locationStrategy) {
        var _this = _super.call(this, router, route, locationStrategy) || this;
        _this.navigationDelay = 0;
        return _this;
    }
    Object.defineProperty(RouterLinkWithHrefDelay.prototype, "bcRouterLink", {
        set: /**
         * @param {?} commands
         * @return {?}
         */
        function (commands) {
            this.routerLink = commands;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} button
     * @param {?} ctrlKey
     * @param {?} metaKey
     * @param {?} shiftKey
     * @return {?}
     */
    RouterLinkWithHrefDelay.prototype.onClick = /**
     * @param {?} button
     * @param {?} ctrlKey
     * @param {?} metaKey
     * @param {?} shiftKey
     * @return {?}
     */
    function (button, ctrlKey, metaKey, shiftKey) {
        var _this = this;
        // clone the checks being made in super()
        if (button !== 0 || ctrlKey || metaKey || shiftKey) {
            return true;
        }
        if (typeof this.target === 'string' && this.target !== '_self') {
            return true;
        }
        // Omits Observable.timer 'period' argument so  runs once
        this.timerSubscription = timer(this.navigationDelay)
            .subscribe(function (t) {
            _this.timerSubscription.unsubscribe();
            _super.prototype.onClick.call(_this, button, ctrlKey, metaKey, shiftKey);
        });
        return false;
    };
    /**
     * @return {?}
     */
    RouterLinkWithHrefDelay.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        _super.prototype.ngOnDestroy.call(this);
        // If the component is destroyed before the timer completes
        if (this.timerSubscription) {
            this.timerSubscription.unsubscribe();
        }
    };
    /** @nocollapse */
    RouterLinkWithHrefDelay.ctorParameters = function () { return [
        { type: Router, },
        { type: ActivatedRoute, },
        { type: LocationStrategy, },
    ]; };
    RouterLinkWithHrefDelay.propDecorators = {
        "navigationDelay": [{ type: Input },],
        "bcRouterLink": [{ type: Input },],
        "onClick": [{ type: HostListener, args: ['click', ['$event.button', '$event.ctrlKey', '$event.metaKey', '$event.shiftKey'],] },],
    };
RouterLinkWithHrefDelay.ɵfac = function RouterLinkWithHrefDelay_Factory(t) { return new (t || RouterLinkWithHrefDelay)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Router), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ActivatedRoute), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.LocationStrategy)); };
RouterLinkWithHrefDelay.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: RouterLinkWithHrefDelay, selectors: [["a", "bcRouterLink", ""]], hostBindings: function RouterLinkWithHrefDelay_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function RouterLinkWithHrefDelay_click_HostBindingHandler($event) { return ctx.onClick($event.button, $event.ctrlKey, $event.metaKey, $event.shiftKey); });
    } }, inputs: { bcRouterLink: "bcRouterLink", navigationDelay: "navigationDelay" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(RouterLinkWithHrefDelay, [{
        type: Directive,
        args: [{
                selector: 'a[bcRouterLink]'
            }]
    }], function () { return [{ type: ɵngcc1.Router }, { type: ɵngcc1.ActivatedRoute }, { type: ɵngcc2.LocationStrategy }]; }, { bcRouterLink: [{
            type: Input
        }], onClick: [{
            type: HostListener,
            args: ['click', ['$event.button', '$event.ctrlKey', '$event.metaKey', '$event.shiftKey']]
        }], navigationDelay: [{
            type: Input
        }] }); })();
    return RouterLinkWithHrefDelay;
}(RouterLinkWithHref));
export { RouterLinkWithHrefDelay };
function RouterLinkWithHrefDelay_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    RouterLinkWithHrefDelay.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    RouterLinkWithHrefDelay.ctorParameters;
    /** @type {!Object<string,!Array<{type: !Function, args: (undefined|!Array<?>)}>>} */
    RouterLinkWithHrefDelay.propDecorators;
    /** @type {?} */
    RouterLinkWithHrefDelay.prototype.navigationDelay;
    /** @type {?} */
    RouterLinkWithHrefDelay.prototype.timerSubscription;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGVyLWxpbmstZGVsYXkuanMiLCJzb3VyY2VzIjpbIkBiY29kZXMvbmd4LXJvdXRlcmxpbmstZGVsYXkvZGlyZWN0aXZlcy9yb3V0ZXItbGluay1kZWxheS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFlBQVksRUFBYSxNQUFNLGVBQWUsQ0FBQztBQUMxRSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxFQUFFLGNBQWMsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQzdFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ25ELE9BQU8sRUFBRSxLQUFLLEVBQW9CLE1BQU0sTUFBTSxDQUFDO0FBQy9DO0FBQ0E7QUFDQztBQUNBOzs7O0FBQ0E7QUFHZSxJQUE2QixtREFBa0I7QUFBRSxJQVc3RCxpQ0FBWSxNQUFjLEVBQUUsS0FBcUIsRUFBRSxnQkFBa0M7QUFDekYsUUFESSxZQUNJLGtCQUFNLE1BQU0sRUFBRSxLQUFLLEVBQUUsZ0JBQWdCLENBQUMsU0FDekM7QUFDTCxnQ0FaK0IsQ0FBQztBQUNoQztBQUVPLEtBUUY7QUFDTCwwQkFUUSxpREFBWTtBQUFLO0FBQWtCO0FBQ2xCO0FBR3RCO0FBQWEsa0JBSkssUUFBd0I7QUFDN0MsWUFBUSxJQUFJLENBQUMsVUFBVSxHQUFHLFFBQVEsQ0FBQztBQUNuQztBQUVHO0FBQTJCO0FBRXhCO0FBQVM7QUFBUztBQUEwQjtBQUEyQjtBQUNuRTtBQUE0QjtBQUd0QztBQUFTLElBQ0wseUNBQU87QUFBUTtBQUEwQjtBQUEyQjtBQUNwRTtBQUE0QjtBQUMvQjtBQUFTLGNBRkUsTUFBYyxFQUFFLE9BQWdCLEVBQUUsT0FBZ0IsRUFBRSxRQUFpQjtBQUFLO0FBQ3BFO0FBQ0EsUUFBVixFQUFFLENBQUMsQ0FBQyxNQUFNLEtBQUssQ0FBQyxJQUFJLE9BQU8sSUFBSSxPQUFPLElBQUksUUFBUSxDQUFDLENBQUMsQ0FBQztB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QUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBRUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUdBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFFQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUNBLEFBN0NBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFUQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFXQSxBQUFBLEFBRUEsQUFBQSxBQVdBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUExQkEsQUFXQSxBQUFBLEFBQUEsQUFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgSW5wdXQsIEhvc3RMaXN0ZW5lciwgT25EZXN0cm95IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFJvdXRlckxpbmtXaXRoSHJlZiwgUm91dGVyLCBBY3RpdmF0ZWRSb3V0ZSB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XHJcbmltcG9ydCB7IExvY2F0aW9uU3RyYXRlZ3kgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xyXG5pbXBvcnQgeyB0aW1lciwgU3Vic2NyaXB0aW9uTGlrZSB9IGZyb20gJ3J4anMnO1xyXG4vKipcclxuICogRXh0ZW5kcyB7QGxpbmsgUm91dGVyTGlua1dpdGhIcmVmfVxyXG4gKiBAc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9hbmd1bGFyL2FuZ3VsYXIvYmxvYi9tYXN0ZXIvcGFja2FnZXMvcm91dGVyL3NyYy9kaXJlY3RpdmVzL3JvdXRlcl9saW5rLnRzXHJcbiAqL1xyXG5ARGlyZWN0aXZlKHtcclxuICAgIHNlbGVjdG9yOiAnYVtiY1JvdXRlckxpbmtdJ1xyXG59KVxyXG5leHBvcnQgY2xhc3MgUm91dGVyTGlua1dpdGhIcmVmRGVsYXkgZXh0ZW5kcyBSb3V0ZXJMaW5rV2l0aEhyZWYgaW1wbGVtZW50cyBPbkRlc3Ryb3kge1xyXG5cclxuICAgIEBJbnB1dCgpIG5hdmlnYXRpb25EZWxheSA9IDA7XHJcblxyXG4gICAgQElucHV0KClcclxuICAgIHNldCBiY1JvdXRlckxpbmsoY29tbWFuZHM6IGFueVtdIHwgc3RyaW5nKSB7XHJcbiAgICAgICAgdGhpcy5yb3V0ZXJMaW5rID0gY29tbWFuZHM7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSB0aW1lclN1YnNjcmlwdGlvbjogU3Vic2NyaXB0aW9uTGlrZTtcclxuXHJcbiAgICBjb25zdHJ1Y3Rvcihyb3V0ZXI6IFJvdXRlciwgcm91dGU6IEFjdGl2YXRlZFJvdXRlLCBsb2NhdGlvblN0cmF0ZWd5OiBMb2NhdGlvblN0cmF0ZWd5KSB7XHJcbiAgICAgICAgc3VwZXIocm91dGVyLCByb3V0ZSwgbG9jYXRpb25TdHJhdGVneSk7XHJcbiAgICB9XHJcblxyXG4gICAgQEhvc3RMaXN0ZW5lcignY2xpY2snLCBbJyRldmVudC5idXR0b24nLCAnJGV2ZW50LmN0cmxLZXknLCAnJGV2ZW50Lm1ldGFLZXknLCAnJGV2ZW50LnNoaWZ0S2V5J10pXHJcbiAgICBvbkNsaWNrKGJ1dHRvbjogbnVtYmVyLCBjdHJsS2V5OiBib29sZWFuLCBtZXRhS2V5OiBib29sZWFuLCBzaGlmdEtleTogYm9vbGVhbik6IGJvb2xlYW4ge1xyXG4gICAgICAgIC8vIGNsb25lIHRoZSBjaGVja3MgYmVpbmcgbWFkZSBpbiBzdXBlcigpXHJcbiAgICAgICAgaWYgKGJ1dHRvbiAhPT0gMCB8fCBjdHJsS2V5IHx8IG1ldGFLZXkgfHwgc2hpZnRLZXkpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAodHlwZW9mIHRoaXMudGFyZ2V0ID09PSAnc3RyaW5nJyAmJiB0aGlzLnRhcmdldCAhPT0gJ19zZWxmJykge1xyXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIE9taXRzIE9ic2VydmFibGUudGltZXIgJ3BlcmlvZCcgYXJndW1lbnQgc28gIHJ1bnMgb25jZVxyXG4gICAgICAgIHRoaXMudGltZXJTdWJzY3JpcHRpb24gPSB0aW1lcih0aGlzLm5hdmlnYXRpb25EZWxheSlcclxuICAgICAgICAgICAgLnN1YnNjcmliZSh0ID0+IHtcclxuICAgICAgICAgICAgICAgIHRoaXMudGltZXJTdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcclxuICAgICAgICAgICAgICAgIHN1cGVyLm9uQ2xpY2soYnV0dG9uLCBjdHJsS2V5LCBtZXRhS2V5LCBzaGlmdEtleSk7XHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcblxyXG4gICAgbmdPbkRlc3Ryb3koKSB7XHJcbiAgICAgICAgc3VwZXIubmdPbkRlc3Ryb3koKTtcclxuICAgICAgICAvLyBJZiB0aGUgY29tcG9uZW50IGlzIGRlc3Ryb3llZCBiZWZvcmUgdGhlIHRpbWVyIGNvbXBsZXRlc1xyXG4gICAgICAgIGlmICh0aGlzLnRpbWVyU3Vic2NyaXB0aW9uKSB7XHJcbiAgICAgICAgICAgIHRoaXMudGltZXJTdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuIl19