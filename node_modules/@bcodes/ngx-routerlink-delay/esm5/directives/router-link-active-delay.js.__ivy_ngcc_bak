/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import * as tslib_1 from "tslib";
import { RouterLinkActive, Router } from '@angular/router';
import { Directive, ContentChildren, QueryList, ElementRef, Renderer2, ChangeDetectorRef, Input } from '@angular/core';
import { RouterLinkWithHrefDelay } from './router-link-delay';
/**
 * Extends {\@link RouterLinkActive }
 * @see https://github.com/angular/angular/blob/master/packages/router/src/directives/router_link_active.ts
 */
var RouterLinkActiveDelay = /** @class */ (function (_super) {
    tslib_1.__extends(RouterLinkActiveDelay, _super);
    function RouterLinkActiveDelay(router, element, renderer, cdr) {
        return _super.call(this, router, element, renderer, cdr) || this;
    }
    Object.defineProperty(RouterLinkActiveDelay.prototype, "bcRouterLinkActive", {
        set: /**
         * @param {?} data
         * @return {?}
         */
        function (data) {
            this.routerLinkActive = data;
        },
        enumerable: true,
        configurable: true
    });
    RouterLinkActiveDelay.decorators = [
        { type: Directive, args: [{
                    selector: 'a[bcRouterLinkActive]'
                },] },
    ];
    /** @nocollapse */
    RouterLinkActiveDelay.ctorParameters = function () { return [
        { type: Router, },
        { type: ElementRef, },
        { type: Renderer2, },
        { type: ChangeDetectorRef, },
    ]; };
    RouterLinkActiveDelay.propDecorators = {
        "linksWithHrefs": [{ type: ContentChildren, args: [RouterLinkWithHrefDelay, { descendants: true },] },],
        "bcRouterLinkActive": [{ type: Input },],
    };
    return RouterLinkActiveDelay;
}(RouterLinkActive));
export { RouterLinkActiveDelay };
function RouterLinkActiveDelay_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    RouterLinkActiveDelay.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    RouterLinkActiveDelay.ctorParameters;
    /** @type {!Object<string,!Array<{type: !Function, args: (undefined|!Array<?>)}>>} */
    RouterLinkActiveDelay.propDecorators;
    /** @type {?} */
    RouterLinkActiveDelay.prototype.linksWithHrefs;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGVyLWxpbmstYWN0aXZlLWRlbGF5LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGJjb2Rlcy9uZ3gtcm91dGVybGluay1kZWxheS8iLCJzb3VyY2VzIjpbImRpcmVjdGl2ZXMvcm91dGVyLWxpbmstYWN0aXZlLWRlbGF5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQzNELE9BQU8sRUFBRSxTQUFTLEVBQUUsZUFBZSxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsU0FBUyxFQUFFLGlCQUFpQixFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN2SCxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQzs7Ozs7O0lBU25CLGlEQUFnQjtJQU12RCwrQkFBWSxNQUFjLEVBQUUsT0FBbUIsRUFBRSxRQUFtQixFQUFFLEdBQXNCO2VBQ3hGLGtCQUFNLE1BQU0sRUFBRSxPQUFPLEVBQUUsUUFBUSxFQUFFLEdBQUcsQ0FBQztLQUN4QzswQkFHRyxxREFBa0I7Ozs7O2tCQUFDLElBQXVCO1lBQzFDLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxJQUFJLENBQUM7Ozs7OztnQkFmcEMsU0FBUyxTQUFDO29CQUNQLFFBQVEsRUFBRSx1QkFBdUI7aUJBQ3BDOzs7O2dCQVYwQixNQUFNO2dCQUNlLFVBQVU7Z0JBQUUsU0FBUztnQkFBRSxpQkFBaUI7OzttQ0FhbkYsZUFBZSxTQUFDLHVCQUF1QixFQUFFLEVBQUUsV0FBVyxFQUFFLElBQUksRUFBRTt1Q0FPOUQsS0FBSzs7Z0NBckJWO0VBVzJDLGdCQUFnQjtTQUE5QyxxQkFBcUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSb3V0ZXJMaW5rQWN0aXZlLCBSb3V0ZXIgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xyXG5pbXBvcnQgeyBEaXJlY3RpdmUsIENvbnRlbnRDaGlsZHJlbiwgUXVlcnlMaXN0LCBFbGVtZW50UmVmLCBSZW5kZXJlcjIsIENoYW5nZURldGVjdG9yUmVmLCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBSb3V0ZXJMaW5rV2l0aEhyZWZEZWxheSB9IGZyb20gJy4vcm91dGVyLWxpbmstZGVsYXknO1xyXG5cclxuLyoqXHJcbiAqIEV4dGVuZHMge0BsaW5rIFJvdXRlckxpbmtBY3RpdmUgfVxyXG4gKiBAc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9hbmd1bGFyL2FuZ3VsYXIvYmxvYi9tYXN0ZXIvcGFja2FnZXMvcm91dGVyL3NyYy9kaXJlY3RpdmVzL3JvdXRlcl9saW5rX2FjdGl2ZS50c1xyXG4gKi9cclxuQERpcmVjdGl2ZSh7XHJcbiAgICBzZWxlY3RvcjogJ2FbYmNSb3V0ZXJMaW5rQWN0aXZlXSdcclxufSlcclxuZXhwb3J0IGNsYXNzIFJvdXRlckxpbmtBY3RpdmVEZWxheSBleHRlbmRzIFJvdXRlckxpbmtBY3RpdmUge1xyXG5cclxuICAgIC8vIE92ZXJyaWRlIHRoZSBsaW5rc1dpdGhIcmVmcyB3aXRoIG91ciBzZWxlY3RvciBjb21wb25lbnRcclxuICAgIEBDb250ZW50Q2hpbGRyZW4oUm91dGVyTGlua1dpdGhIcmVmRGVsYXksIHsgZGVzY2VuZGFudHM6IHRydWUgfSlcclxuICAgIGxpbmtzV2l0aEhyZWZzOiBRdWVyeUxpc3Q8Um91dGVyTGlua1dpdGhIcmVmRGVsYXk+O1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHJvdXRlcjogUm91dGVyLCBlbGVtZW50OiBFbGVtZW50UmVmLCByZW5kZXJlcjogUmVuZGVyZXIyLCBjZHI6IENoYW5nZURldGVjdG9yUmVmKSB7XHJcbiAgICAgICAgc3VwZXIocm91dGVyLCBlbGVtZW50LCByZW5kZXJlciwgY2RyKTtcclxuICAgIH1cclxuXHJcbiAgICBASW5wdXQoKVxyXG4gICAgc2V0IGJjUm91dGVyTGlua0FjdGl2ZShkYXRhOiBzdHJpbmdbXSB8IHN0cmluZykge1xyXG4gICAgICAgIHRoaXMucm91dGVyTGlua0FjdGl2ZSA9IGRhdGE7XHJcbiAgICB9XHJcbn1cclxuIl19