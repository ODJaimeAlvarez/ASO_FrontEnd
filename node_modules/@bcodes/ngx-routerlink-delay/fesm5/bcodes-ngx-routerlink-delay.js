import { __extends } from 'tslib';
import { Directive, Input, HostListener, ContentChildren, ElementRef, Renderer2, ChangeDetectorRef, NgModule } from '@angular/core';
import { RouterLinkWithHref, Router, ActivatedRoute, RouterLinkActive } from '@angular/router';
import { LocationStrategy, CommonModule } from '@angular/common';
import { timer } from 'rxjs';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
/**
 * Extends {\@link RouterLinkWithHref}
 * @see https://github.com/angular/angular/blob/master/packages/router/src/directives/router_link.ts
 */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/router';
import * as ɵngcc2 from '@angular/common';
var RouterLinkWithHrefDelay = /** @class */ (function (_super) {
    __extends(RouterLinkWithHrefDelay, _super);
    function RouterLinkWithHrefDelay(router, route, locationStrategy) {
        var _this = _super.call(this, router, route, locationStrategy) || this;
        _this.navigationDelay = 0;
        return _this;
    }
    Object.defineProperty(RouterLinkWithHrefDelay.prototype, "bcRouterLink", {
        set: /**
         * @param {?} commands
         * @return {?}
         */
        function (commands) {
            this.routerLink = commands;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} button
     * @param {?} ctrlKey
     * @param {?} metaKey
     * @param {?} shiftKey
     * @return {?}
     */
    RouterLinkWithHrefDelay.prototype.onClick = /**
     * @param {?} button
     * @param {?} ctrlKey
     * @param {?} metaKey
     * @param {?} shiftKey
     * @return {?}
     */
    function (button, ctrlKey, metaKey, shiftKey) {
        var _this = this;
        // clone the checks being made in super()
        if (button !== 0 || ctrlKey || metaKey || shiftKey) {
            return true;
        }
        if (typeof this.target === 'string' && this.target !== '_self') {
            return true;
        }
        // Omits Observable.timer 'period' argument so  runs once
        this.timerSubscription = timer(this.navigationDelay)
            .subscribe(function (t) {
            _this.timerSubscription.unsubscribe();
            _super.prototype.onClick.call(_this, button, ctrlKey, metaKey, shiftKey);
        });
        return false;
    };
    /**
     * @return {?}
     */
    RouterLinkWithHrefDelay.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        _super.prototype.ngOnDestroy.call(this);
        // If the component is destroyed before the timer completes
        if (this.timerSubscription) {
            this.timerSubscription.unsubscribe();
        }
    };
    /** @nocollapse */
    RouterLinkWithHrefDelay.ctorParameters = function () { return [
        { type: Router, },
        { type: ActivatedRoute, },
        { type: LocationStrategy, },
    ]; };
    RouterLinkWithHrefDelay.propDecorators = {
        "navigationDelay": [{ type: Input },],
        "bcRouterLink": [{ type: Input },],
        "onClick": [{ type: HostListener, args: ['click', ['$event.button', '$event.ctrlKey', '$event.metaKey', '$event.shiftKey'],] },],
    };
RouterLinkWithHrefDelay.ɵfac = function RouterLinkWithHrefDelay_Factory(t) { return new (t || RouterLinkWithHrefDelay)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Router), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ActivatedRoute), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.LocationStrategy)); };
RouterLinkWithHrefDelay.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: RouterLinkWithHrefDelay, selectors: [["a", "bcRouterLink", ""]], hostBindings: function RouterLinkWithHrefDelay_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function RouterLinkWithHrefDelay_click_HostBindingHandler($event) { return ctx.onClick($event.button, $event.ctrlKey, $event.metaKey, $event.shiftKey); });
    } }, inputs: { bcRouterLink: "bcRouterLink", navigationDelay: "navigationDelay" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(RouterLinkWithHrefDelay, [{
        type: Directive,
        args: [{
                selector: 'a[bcRouterLink]'
            }]
    }], function () { return [{ type: ɵngcc1.Router }, { type: ɵngcc1.ActivatedRoute }, { type: ɵngcc2.LocationStrategy }]; }, { bcRouterLink: [{
            type: Input
        }], onClick: [{
            type: HostListener,
            args: ['click', ['$event.button', '$event.ctrlKey', '$event.metaKey', '$event.shiftKey']]
        }], navigationDelay: [{
            type: Input
        }] }); })();
    return RouterLinkWithHrefDelay;
}(RouterLinkWithHref));

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
/**
 * Extends {\@link RouterLinkActive }
 * @see https://github.com/angular/angular/blob/master/packages/router/src/directives/router_link_active.ts
 */
var RouterLinkActiveDelay = /** @class */ (function (_super) {
    __extends(RouterLinkActiveDelay, _super);
    function RouterLinkActiveDelay(router, element, renderer, cdr) {
        return _super.call(this, router, element, renderer, cdr) || this;
    }
    Object.defineProperty(RouterLinkActiveDelay.prototype, "bcRouterLinkActive", {
        set: /**
         * @param {?} data
         * @return {?}
         */
        function (data) {
            this.routerLinkActive = data;
        },
        enumerable: true,
        configurable: true
    });
    /** @nocollapse */
    RouterLinkActiveDelay.ctorParameters = function () { return [
        { type: Router, },
        { type: ElementRef, },
        { type: Renderer2, },
        { type: ChangeDetectorRef, },
    ]; };
    RouterLinkActiveDelay.propDecorators = {
        "linksWithHrefs": [{ type: ContentChildren, args: [RouterLinkWithHrefDelay, { descendants: true },] },],
        "bcRouterLinkActive": [{ type: Input },],
    };
RouterLinkActiveDelay.ɵfac = function RouterLinkActiveDelay_Factory(t) { return new (t || RouterLinkActiveDelay)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Router), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };
RouterLinkActiveDelay.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: RouterLinkActiveDelay, selectors: [["a", "bcRouterLinkActive", ""]], contentQueries: function RouterLinkActiveDelay_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, RouterLinkWithHrefDelay, 1);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.linksWithHrefs = _t);
    } }, inputs: { bcRouterLinkActive: "bcRouterLinkActive" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(RouterLinkActiveDelay, [{
        type: Directive,
        args: [{
                selector: 'a[bcRouterLinkActive]'
            }]
    }], function () { return [{ type: ɵngcc1.Router }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ChangeDetectorRef }]; }, { bcRouterLinkActive: [{
            type: Input
        }], linksWithHrefs: [{
            type: ContentChildren,
            args: [RouterLinkWithHrefDelay, { descendants: true }]
        }] }); })();
    return RouterLinkActiveDelay;
}(RouterLinkActive));

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
var RouterLinkDelayModule = /** @class */ (function () {
    function RouterLinkDelayModule() {
    }
    /** @nocollapse */
    RouterLinkDelayModule.ctorParameters = function () { return []; };
RouterLinkDelayModule.ɵfac = function RouterLinkDelayModule_Factory(t) { return new (t || RouterLinkDelayModule)(); };
RouterLinkDelayModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: RouterLinkDelayModule });
RouterLinkDelayModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[
            CommonModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(RouterLinkDelayModule, { declarations: function () { return [RouterLinkWithHrefDelay, RouterLinkActiveDelay]; }, imports: function () { return [CommonModule]; }, exports: function () { return [RouterLinkWithHrefDelay, RouterLinkActiveDelay]; } }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(RouterLinkDelayModule, [{
        type: NgModule,
        args: [{
                imports: [
                    CommonModule
                ],
                declarations: [
                    RouterLinkWithHrefDelay,
                    RouterLinkActiveDelay
                ],
                exports: [
                    RouterLinkWithHrefDelay,
                    RouterLinkActiveDelay
                ]
            }]
    }], function () { return []; }, null); })();
    return RouterLinkDelayModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

export { RouterLinkWithHrefDelay, RouterLinkActiveDelay, RouterLinkDelayModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,